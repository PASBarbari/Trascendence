apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: fleet-server
  namespace: elk
spec:
  mode: fleet
  fleetServerEnabled: true
  version: 8.13.4
  elasticsearchRefs:
  - name: trascendence
  kibanaRef:
    name: trascendence
  daemonSet:
    podTemplate:
      spec:
        securityContext:
          runAsUser: 0 # root
        containers:
        - name: agent
          env:
          - name: FLEET_SERVER_ENABLE
            value: "true"
          - name: FLEET_SERVER_HOST
            value: "0.0.0.0"
          - name: FLEET_SERVER_PORT
            value: "8220"
          - name: FLEET_SERVER_CERT
            value: "/usr/share/fleet-server/certs/tls.crt"
          - name: FLEET_SERVER_CERT_KEY
            value: "/usr/share/fleet-server/certs/tls.key"
          - name: FLEET_SERVER_ELASTICSEARCH_HOST
            value: "https://trascendence-es-http:9200"
          - name: FLEET_SERVER_ELASTICSEARCH_CA
            value: "/usr/share/fleet-server/ca/ca.crt"
          - name: FLEET_SERVER_ES_CA
            value: "/usr/share/fleet-server/ca/ca.crt"
          - name: FLEET_SERVER_SIGNING_KEY
            valueFrom:
                secretKeyRef: 
                    name: fleet-kibana-enckey
                    key: fleetSigningKey
          - name: FLEET_SERVER_ENCRYPTION_KEY
            valueFrom:
                secretKeyRef: 
                    name: fleet-kibana-enckey
                    key: encryptionKey
          - name: FLEET_SERVER_ELASTICSEARCH_INSECURE
            value: "false"
          - name: FLEET_SERVER_ELASTICSEARCH_USERNAME
            value: "elastic"
          - name: FLEET_SERVER_ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elastic-credentials
                key: ELASTIC_PASSWORD
          ports:
          - containerPort: 8220
            protocol: TCP
          volumeMounts:
          - name: fleet-server-cert
            mountPath: /usr/share/fleet-server/certs
            readOnly: true
          - name: elasticsearch-ca
            mountPath: /usr/share/fleet-server/ca
            readOnly: true
        volumes:
        - name: fleet-server-cert
          secret:
            secretName: fleet-server-cert
        - name: elasticsearch-ca
          secret:
            secretName: trascendence-kb-es-ca
---
apiVersion: v1
kind: Service
metadata:
  name: fleet-server-agent-http
  namespace: elk
spec:
  selector:
    agent.k8s.elastic.co/name: fleet-server
  ports:
    - protocol: TCP
      port: 8220
      targetPort: 8220
  type: ClusterIP
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: elastic-agent
  namespace: elk
spec:
  version: 8.13.4
  mode: fleet
  fleetServerEnabled: false
  kibanaRef:
    name: trascendence
  daemonSet:
    podTemplate:
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - name: agent
          env:
          - name: FLEET_ENROLL
            value: "true"
          - name: FLEET_URL
            value: "https://fleet-server-agent-http:8220"
          - name: FLEET_CA
            valueFrom:
              secretKeyRef:
                name: fleet-server-agent-http-certs-internal
                key: ca.crt
          - name: FLEET_ENROLLMENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: fleet-server-agent-token
                key: token
          - name: FLEET_INSECURE
            value: "false"
          - name: FLEET_SERVER_POLICY_ID
            value: "eck-fleet-server"
          volumeMounts:
          - name: fleet-ca
            mountPath: /usr/share/fleet-server/ca
            readOnly: true
        volumes:
        - name: fleet-ca
          secret:
            secretName: fleet-server-agent-http-certs-internal