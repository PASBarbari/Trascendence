apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-deployment
  namespace: user
  labels:
    app: user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      labels:
        app: user
    spec:
      initContainers:
        - name: init-user-server
          image: busybox
          command: ['sh', '-c', 'echo "Waiting for the database service"; while ! nc -z $POSTGRES_HOST $POSTGRES_PORT; do sleep 1; done; echo "Database service is up and running"']
          env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: user-db-secret
                key: user-db
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: user-db-secret
                key: user-db-user
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: user-configmap
                key: user_db
          - name: POSTGRES_PORT
            value: "5432"
      containers:
      - name: user-deployment
        image: bombatomica/user
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: user-db-secret
              key: user-db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: user-db-secret
              key: user-db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: user-db-secret
              key: user-db-password
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: user-configmap
              key: user_db
        - name: POSTGRES_PORT
          value: "5432"
        - name: LOGIN_URL
          valueFrom:
            configMapKeyRef:
              name: user-configmap
              key: login_url
        - name: USER_URL
          valueFrom:
            configMapKeyRef:
              name: user-configmap
              key: users_url
        - name: NOTIFICATIONS_URL
          valueFrom:
            configMapKeyRef:
              name: user-configmap
              key: notifications_url
        - name: CHAT_URL
          valueFrom:
            configMapKeyRef:
              name: user-configmap
              key: chat_url
        - name: PONG_URL
          valueFrom:
            configMapKeyRef:
              name: user-configmap
              key: pong_url
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: user-admin
              key: admin_username
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: user-admin
              key: admin_password
        - name: ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              name: user-admin
              key: admin_email
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: user-admin
              key: secret-key
        - name: MINIO_STORAGE_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: minio-user
              key: minio-storage-endpoint
        - name: MINIO_STORAGE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: user-minio-credentials
              key: accesskey
        - name: MINIO_STORAGE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: user-minio-credentials
              key: secretkey
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: user
  labels:
    app: user
spec:
  selector:
    app: user
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000