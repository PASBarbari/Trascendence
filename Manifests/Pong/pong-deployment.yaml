apiVersion: apps/v1
kind: Deployment
metadata:
  name: pong-deployment
  namespace: pong
  labels:
    app: pong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pong
  template:
    metadata:
      labels:
        app: pong
    spec:
      initContainers:
        - name: init-pong-db
          image: postgres:alpine
          command: ['sh', '-c', 'until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d $POSTGRES_DB; do echo waiting for postgres; sleep 2; done;']
          env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: pong-db-secret
                key: pong-db
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: pong-db-secret
                key: pong-db-user
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: pong-configmap
                key: pong_db
          - name: POSTGRES_PORT
            value: "5432"
      containers:
      - name: pong-deployment
        image: bombatomica/pong
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: pong-db-secret
              key: pong-db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pong-db-secret
              key: pong-db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pong-db-secret
              key: pong-db-password
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: pong-configmap
              key: pong_db
        - name: POSTGRES_PORT
          value: "5432"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: pong-configmap
              key: redis
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: pong-configmap
              key: redis_port
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: pong-configmap
              key: redis_db
        - name: LOGIN_URL
          valueFrom:
            configMapKeyRef:
              name: pong-configmap
              key: login_url
        - name: CHAT_URL
          valueFrom:
            configMapKeyRef:
              name: pong-configmap
              key: chat_url
        - name: USER_URL
          valueFrom:
            configMapKeyRef:
              name: pong-configmap
              key: users_url
        - name: NOTIFICATIONS_URL
          valueFrom:
            configMapKeyRef:
              name: pong-configmap
              key: pong_url
        - name: PONG_URL
          valueFrom:
            configMapKeyRef:
              name: pong-configmap
              key: pong_url
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: pong-admin
              key: admin_username
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pong-admin
              key: admin_password
        - name: ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              name: pong-admin
              key: admin_email
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: pong-admin
              key: secret-key
        - name: DEBUG
          value: "False"
---
apiVersion: v1
kind: Service
metadata:
  name: pong-service
  namespace: pong
spec:
  selector:
    app: pong
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: LoadBalancer