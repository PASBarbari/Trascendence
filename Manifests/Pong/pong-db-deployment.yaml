apiVersion: apps/v1
kind: Deployment
metadata:
  name: pong-db-deployment
  namespace: pong
  labels:
    app: pong-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pong-db
  template:
    metadata:
      labels:
        app: pong-db
    spec:
      containers:
      - name: pong-db
        image: postgres
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        env:
        - name: POSTGRES_DB
          valueFrom:
           secretKeyRef:
            name: pong-db-secret
            key: pong-db
        - name: POSTGRES_USER
          valueFrom:
           secretKeyRef:
            name: pong-db-secret
            key: pong-db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
           secretKeyRef:
            name: pong-db-secret
            key: pong-db-password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pong-db-service
  namespace: pong
spec:
  selector:
    app: pong-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: pong
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512Mi
  volumeName: postgres-pv
  storageClassName: standard