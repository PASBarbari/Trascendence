# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: quickstart
#   labels:
#     app.kubernetes.io/name: elasticsearch-logstash
#     app.kubernetes.io/component: logstash
# data:
#   logstash.yml: |
#     http.host: 0.0.0.0
#     pipeline.ecs_compatibility: disabled
#   pipelines.yml: |
#     - pipeline.id: logstash
#       path.config: "/usr/share/logstash/pipeline/logstash.conf"
 
#   log4j2.properties: |
#     logger.logstashpipeline.name = logstash.inputs.beats
#     logger.logstashpipeline.level = error
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: logstash-pipeline
#   labels:
#     app.kubernetes.io/name: elasticsearch-logstash
#     app.kubernetes.io/component: logstash
# data:
#   logstash.conf: |
#     input {
#       beats {
#         port => 5044
#       }
#     }
#     filter {
#       json {
#         source => "message"
#       }
#       prune {
#         whitelist_names => [ "msg" ]
#       }
#       mutate {
#         rename => { "msg" => "message" }
#       }
#     }
#     output {
#       if [message]  =~ "admission" {
#         elasticsearch {
#           index => "logstashadmission-%{+YYYY.MM.dd}"
#           hosts => [ "${ES_HOSTS}" ]
#           user => "${ES_USER}"
#           password => "${ES_PASSWORD}"
#           cacert => '/etc/logstash/certificates/ca.crt'
#         }
#       }
#     }
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: elk
  labels:
    app.kubernetes.io/name: elasticsearch-logstash
    app.kubernetes.io/component: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch-logstash
      app.kubernetes.io/component: logstash
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch-logstash
        app.kubernetes.io/component: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:8.13.4
          ports:
            - name: "tcp-beats"
              containerPort: 5044
          resources:
            limits:
              memory: "1Gi"
              cpu: "1000m"
            requests:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: ES_HOSTS
              value: "https://trascendence-es-http.elk-test.svc:9200"
            - name: ES_USER
              value: "elastic"
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: trascendence-es-elastic-user
                  key: elastic
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/config
            - name: pipeline-volume
              mountPath: /usr/share/logstash/pipeline
            # - name: ca-certs
            #   mountPath: /etc/logstash/certificates
            #   readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: logstash-config
        - name: pipeline-volume
          configMap:
            name: logstash-pipeline
        # - name: ca-certs
        #   secret:
        #     secretName: elasticsearch-es-http-certs-public
 
---
 
apiVersion: v1
kind: Service
metadata:
  name: logstash
  labels:
    app.kubernetes.io/name: elasticsearch-logstash
    app.kubernetes.io/component: logstash
spec:
  ports:
    - name: "tcp-beats"
      port: 5044
      targetPort: 5044
  selector:
    app.kubernetes.io/name: elasticsearch-logstash
    app.kubernetes.io/component: logstash
---

