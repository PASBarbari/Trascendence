apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-websocket-headers
  namespace: {{ .Release.Namespace }}
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: "https"
    customResponseHeaders:
      Connection: "Upgrade"
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-redirect-https
  namespace: {{ .Release.Namespace }}
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /api/chat
    forceSlash: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-traefik-containous-crd-permissions
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
rules:
- apiGroups:
  - "traefik.containo.us" # Note: k3s might use traefik.containo.us
  resources:
  - middlewares
  - middlewaretcps
  - ingressroutes
  - ingressroutetcps
  - ingressrouteudps
  - tlsoptions
  - tlsstores
  - traefikservices
  # Add any other CRDs from traefik.containo.us you might use
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-traefik-containous-crd-binding
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
subjects:
- kind: ServiceAccount
  name: traefik # Name of Traefik's ServiceAccount
  namespace: kube-system # Namespace of Traefik's ServiceAccount
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-traefik-containous-crd-permissions # Name of the ClusterRole created above
  apiGroup: rbac.authorization.k8s.io