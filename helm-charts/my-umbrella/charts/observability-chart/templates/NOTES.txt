🚀 Trascendence Observability Stack has been installed successfully!

📊 SERVICES DEPLOYED:
{{- if index .Values "eck-elasticsearch" "enabled" }}
✅ Elasticsearch: Log storage and search engine
{{- end }}
{{- if .Values.kibana.enabled }}
✅ Kibana: Log visualization and analytics
{{- end }}
{{- if .Values.logstash.enabled }}
✅ Logstash: Log processing pipeline
{{- end }}
{{- if .Values.filebeat.enabled }}
✅ Filebeat: Log collection agent
{{- end }}
{{- if .Values.prometheus.enabled }}
✅ Prometheus: Metrics collection and alerting
{{- end }}
{{- if .Values.grafana.enabled }}
✅ Grafana: Metrics visualization and dashboards
{{- end }}

🌐 ACCESS URLS:
{{- if .Values.grafana.enabled }}
Grafana Dashboard: https://grafana.trascendence.local
  Username: {{ .Values.grafana.adminUser }}
  Password: {{ .Values.grafana.adminPassword }}
{{- end }}
{{- if index .Values "eck-kibana" "enabled" }}
Kibana Dashboard: https://kibana.trascendence.local
  Username: elastic
  Password: Get it with: kubectl get secret eck-elasticsearch-es-elastic-user -o jsonpath='{.data.elastic}' | base64 -d
{{- end }}

🔧 SETUP INSTRUCTIONS:

1. Add the following entries to your /etc/hosts file:
   127.0.0.1 grafana.trascendence.local
   127.0.0.1 kibana.trascendence.local

2. Verify all pods are running:
   kubectl get pods -l app.kubernetes.io/instance={{ .Release.Name }}

3. Check service status:
   kubectl get svc -l app.kubernetes.io/instance={{ .Release.Name }}

{{- if .Values.certificates.enabled }}
4. Verify TLS certificates are ready:
   kubectl get certificates
{{- end }}

📈 MONITORING SETUP:

{{- if .Values.serviceMonitors.enabled }}
• Service monitors are configured for:
  {{- if .Values.serviceMonitors.loginService.enabled }}
  - Login Service
  {{- end }}
  {{- if .Values.serviceMonitors.chatService.enabled }}
  - Chat Service
  {{- end }}
  {{- if .Values.serviceMonitors.frontend.enabled }}
  - Frontend
  {{- end }}
{{- end }}

{{- if .Values.prometheus.enabled }}
• Prometheus alerts are configured for:
  - Service availability
  - High error rates
  - Resource usage
  - Pod restarts
  - Database connectivity
{{- end }}

📋 NEXT STEPS:

1. Configure your services to expose metrics on /metrics endpoint
2. Add the following labels to your services for monitoring:
   labels:
     monitoring: "true"

3. To add metrics to your Django services, install django-prometheus:
   pip install django-prometheus

4. Update your Django settings.py:
   INSTALLED_APPS = [
       'django_prometheus',
       # ... your other apps
   ]
   
   MIDDLEWARE = [
       'django_prometheus.middleware.PrometheusBeforeMiddleware',
       # ... your other middleware
       'django_prometheus.middleware.PrometheusAfterMiddleware',
   ]

5. Add metrics endpoint to your Django urls.py:
   from django.urls import path, include
   
   urlpatterns = [
       path('', include('django_prometheus.urls')),
       # ... your other urls
   ]

🔍 TROUBLESHOOTING:

• If Kibana shows "Kibana server is not ready yet":
  kubectl logs -l app=kibana -f

• If Grafana dashboards are not loading:
  kubectl logs -l app.kubernetes.io/name=grafana -f

• If metrics are not appearing in Prometheus:
  kubectl port-forward svc/{{ .Release.Name }}-prometheus-prometheus 9090:9090
  Open http://localhost:9090/targets

• For Elasticsearch issues:
  kubectl logs -l elasticsearch.k8s.elastic.co/cluster-name=trascendence-elasticsearch -f

📚 DOCUMENTATION:
- Grafana: https://grafana.com/docs/
- Kibana: https://www.elastic.co/guide/en/kibana/current/index.html
- Prometheus: https://prometheus.io/docs/

Happy monitoring! 🎉
