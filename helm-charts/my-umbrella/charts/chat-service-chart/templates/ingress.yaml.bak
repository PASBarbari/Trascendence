apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-chat-ingress
  namespace: {{ include "chat-service-chart.namespace" . }}
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.ingress.certManager.clusterIssuer }}
    # Traefik specific annotations
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.priority: "1000"
    # Redirect HTTP to HTTPS
    traefik.ingress.kubernetes.io/router.middlewares: {{ include "chat-service-chart.namespace" . }}-{{ .Release.Name }}-websocket-headers@kubernetes,{{ include "chat-service-chart.namespace" . }}-{{ .Release.Name }}-redirect-https@kubernetes
    # WebSocket configurations
    traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
    traefik.ingress.kubernetes.io/service.sticky.cookie.name: chat_sticky
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: {{ .Values.ingress.path }}
        pathType: {{ .Values.ingress.pathType }}
        backend:
          service:
            name: {{ .Release.Name }}-chat-service
            port:
              number: {{ .Values.service.port }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}