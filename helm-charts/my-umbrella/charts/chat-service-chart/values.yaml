# Default values for chat service chart
replicaCount: 1

image:
  repository: bombatomica/chat
  pullPolicy: Always
  tag: latest

nameOverride: ""
fullnameOverride: ""

namespace: chat

service:
  type: ClusterIP
  port: 8000
  targetPort: 8000

serviceAccount:
  name: "trascendence-chat-sa"
  dbName: "chat-db-service-account"
  create: true
  annotations: {}
  automount: true
  dbAnnotations: {}
  dbAutomount: true

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

configMap:
  data:
    DEBUG: "True"
    DJANGO_SETTINGS_MODULE: "chat.settings"
    CHAT_PORT: "8000"
    CHAT_HOST: "0.0.0.0"
    POSTGRES_HOST: "trascendence-chat-db-service" # This should point to your chat DB service
    POSTGRES_PORT: "5432"
    # POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD, SERVICE_PASSWORD are now sourced from secrets
    REDIS_HOST: "redis"
    REDIS_PORT: "6379"
    REDIS_CHANNEL_DB: "1"
    LOGIN_URL: "http://trascendence-login-service:8000"
    USER_URL: "http://user-service:8000"
    NOTIFICATIONS_URL: "http://notifications-service:8000"
    PONG_URL: "http://pong-service:8000"
    OAUTH2_INTROSPECTION_URL: "http://trascendence-login-service:8000/o/introspect/"
    SERVICE_PASSWORD: "123"
    ALLOWED_HOSTS: "*"

secrets: # Placeholders; actual values will come from umbrella's global.secrets
  database:
    name: "placeholder_chat_db_name"
    user: "placeholder_chat_user"
    password: "placeholder_chat_password"
  admin:
    username: "placeholder_chat_admin_user"
    password: "placeholder_chat_admin_password"
    email: "placeholder_chat_admin_email"
    secretKey: "placeholder_chat_secret_key"
  servicePassword: "placeholder_chat_service_password" # Added servicePassword placeholder

ingress:
  enabled: true
  className: traefik
  host: trascendence.42firenze.it
  path: /api/chat(/|$)(.*)
  pathType: ImplementationSpecific
  annotations: {}
  certManager:
    clusterIssuer: letsencrypt-prod
  ssl:
    forceRedirect: "true"
  tls:
    enabled: true
    secretName: chat-tls

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

persistence:
  enabled: true
  storageClass: standard
  size: 512Mi
  annotations: {}

db:
  enabled: true # Set to true to deploy PostgreSQL along with the login service
  image:
    repository: postgres
    tag: "13" # Specify your desired postgres version
    pullPolicy: IfNotPresent
  service:
    port: 5432
  resources:
    limits:
      cpu: "1"
      memory: "1Gi"
    requests:
      cpu: "250m"
      memory: "256Mi"
  persistence:
    enabled: true
    storageClass: "" # Optional: If blank, uses default SC. Set to "-" to disable SC.
    size: "1Gi"
    annotations: {}
  # PostgreSQL specific environment variables for the subchart
  # These are used to initialize the PostgreSQL instance if db.enabled is true.
  # The login application itself will use the values from .Values.secrets.database.*
  postgresqlUsername: "" # Will default to .Values.secrets.database.user if not set and db.enabled=true
  postgresqlPassword: "" # Will default to .Values.secrets.database.password if not set and db.enabled=true
  postgresqlDatabase: "" # Will default to .Values.secrets.database.name if not set and db.enabled=true


