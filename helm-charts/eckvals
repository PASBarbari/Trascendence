---
# Default values for eck-logstash.
# This is a YAML-formatted file.

# Overridable names of the Logstash resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-logstash'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
# nameOverride: "quickstart"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the Logstash resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of Logstash.
#
version: 9.0.0

# Logstash Docker image to deploy
#
# image:

# Used to check access from the current resource to a resource (for ex. a remote Elasticsearch cluster) in a different namespace.
# Can only be used if ECK is enforcing RBAC on references.
#
# serviceAccountName: ""

# Labels that will be applied to Logstash.
#
labels: {}

# Annotations that will be applied to Logstash.
#
annotations: {}

# Number of revisions to retain to allow rollback in the underlying StatefulSets.
# By default, if not set, Kubernetes sets 10.
#
# revisionHistoryLimit: 2

# Controlling the number of pods.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-scaling-logstash.html
#
count: 1

# The logstash configuration, the ECK equivalent to logstash.yml
#
# NOTE: The `config` and `configRef` fields are mutually exclusive. Only one of them should be defined at a time,
# as using both may cause conflicts.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-configuring-logstash
#
config: {}

# Reference a configuration in a Secret.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-configuring-logstash
#
# configRef:
#   secretName: ''

# Set podTemplate to customize the pod used by Logstash
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-customize-pods.html
#
podTemplate: {}

# Settings for configuring stack monitoring.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-stack-monitoring.html
#
monitoring: {}
  # metrics:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability 
  # logs:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability

# The Logstash pipelines, the ECK equivalent to pipelines.yml
#
# NOTE: The `pipelines` and `pipelinesRef` fields are mutually exclusive. Only one of them should be defined at a time,
# as using both may cause conflicts.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-pipelines
#
pipelines: []

# Reference a pipelines configuration in a Secret.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-pipelines
#
# pipelinesRef:
#   secretName: ''

# volumeClaimTemplates
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-volume-claim-settings
#
volumeClaimTemplates: []

# ElasticsearchRefs are references to Elasticsearch clusters running in the same Kubernetes cluster.
# Ensure that the 'clusterName' field matches what is referenced in the pipeline.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-pipelines-es
#
elasticsearchRefs: []
#  - namespace: ''
#    name: ''
#    clusterName: ''
#    serviceName: ''
#    secretName: ''

services: []

# SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Logstash
secureSettings: []

---
# Default values for eck-stack.
# This is a YAML-formatted file.

# If enabled, will use the eck-elasticsearch chart and deploy an Elasticsearch resource.
#
eck-elasticsearch:
  enabled: true
  # This is adjusting the full name of the elasticsearch resource so that both the eck-elasticsearch
  # and the eck-kibana chart work together by default in the eck-stack chart.
  fullnameOverride: elasticsearch

# If enabled, will use the eck-kibana chart and deploy a Kibana resource.
#
eck-kibana:
  enabled: true
  # This is also adjusting the kibana reference to the elasticsearch resource named previously so that
  # both the eck-elasticsearch and the eck-kibana chart work together by default in the eck-stack chart.
  elasticsearchRef:
    name: elasticsearch

# If enabled, will use the eck-agent chart and deploy an Elastic Agent instance.
#
eck-agent:
  enabled: false

# If enabled, will use the eck-fleet-server chart and deploy a Fleet Server resource.
#
eck-fleet-server:
  enabled: false

# If enabled, will use the eck-beats chart and deploy a Beats resource.
#
eck-beats:
  enabled: false

# If enabled, will use the eck-logstash chart and deploy a Logstash resource.
#
eck-logstash:
  enabled: false

# If enabled, will use the eck-apm-server chart and deploy a standalone APM Server resource.
#
eck-apm-server:
  enabled: false

# If enabled, will use the eck-enterprise-search chart and deploy a Enterprise Search resource.
#
eck-enterprise-search:
  enabled: false

---
# Default values for eck-elasticsearch.
# This is a YAML-formatted file.

# Overridable names of the Elasticsearch resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-elasticsearch'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
# nameOverride: "quickstart"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the Elasticsearch resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of Elasticsearch.
#
version: 9.0.0

# Elasticsearch Docker image to deploy
#
# image:

# Labels that will be applied to Elasticsearch.
#
labels: {}

# Annotations that will be applied to Elasticsearch.
#
annotations: {}

# Settings for configuring Elasticsearch users and roles.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-users-and-roles.html
#
auth: {}

# Settings for configuring stack monitoring.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-stack-monitoring.html
#
monitoring: {}
  # metrics:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability
  # logs:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability

# Control the Elasticsearch transport module used for internal communication between nodes.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-transport-settings.html
#
transport: {}
  # service:
  #   metadata:
  #     labels:
  #       my-custom: label
  #   spec:
  #     type: LoadBalancer
  # tls:
  #   subjectAltNames:
  #     - ip: 1.2.3.4
  #     - dns: hulk.example.com
  #   certificate:
  #     secretName: custom-ca

# Settings to control how Elasticsearch will be accessed.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-accessing-elastic-services.html
#
http: {}
  # service:
  #   metadata:
  #     labels:
  #       my-custom: label
  #   spec:
  #     type: LoadBalancer
  # tls:
  #   selfSignedCertificate:
  #     # To fully disable TLS for the HTTP layer of Elasticsearch, simply
  #     # set the below field to 'true', removing all other fields.
  #     disabled: false
  #     subjectAltNames:
  #       - ip: 1.2.3.4
  #       - dns: hulk.example.com
  #   certificate:
  #     secretName: custom-ca

# Control Elasticsearch Secure Settings.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-es-secure-settings.html#k8s-es-secure-settings
#
secureSettings: []
  # - secretName: one-secure-settings-secret
  # Projection of secret keys to specific paths
  # - secretName: gcs-secure-settings
  #   entries:
  #   - key: gcs.client.default.credentials_file
  #   - key: gcs_client_1
  #     path: gcs.client.client_1.credentials_file
  #   - key: gcs_client_2
  #     path: gcs.client.client_2.credentials_file

# Settings for limiting the number of simultaneous changes to an Elasticsearch resource.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-update-strategy.html
#
updateStrategy: {}
  # changeBudget:
  #   maxSurge: 3
  #   maxUnavailable: 1

# Controlling of connectivity between remote clusters within the same kubernetes cluster.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-remote-clusters.html
#
remoteClusters: {}
  # - name: cluster-two
  #   elasticsearchRef:
  #     name: cluster-two
  #     namespace: ns-two

# VolumeClaimDeletePolicy sets the policy for handling deletion of PersistentVolumeClaims for all NodeSets.
# Possible values are DeleteOnScaledownOnly and DeleteOnScaledownAndClusterDeletion.
# By default, if not set or empty, the operator sets DeleteOnScaledownAndClusterDeletion.
#
volumeClaimDeletePolicy: ""

# Settings to limit the disruption when pods need to be rescheduled for some reason such as upgrades or routine maintenance.
# By default, if not set, the operator sets a budget that doesn't allow any pod to be removed in case the cluster is not green or if there is only one node of type `data` or `master`.
# In all other cases the default PodDisruptionBudget sets `minUnavailable` equal to the total number of nodes minus 1.
# To completely disable the pod disruption budget set `disabled` to true.
#
# podDisruptionBudget:
#   spec:
#     minAvailable: 2
#     selector:
#       matchLabels:
#         elasticsearch.k8s.elastic.co/cluster-name: quickstart
#   disabled: true

# Used to check access from the current resource to a resource (for ex. a remote Elasticsearch cluster) in a different namespace.
# Can only be used if ECK is enforcing RBAC on references.
#
# serviceAccountName: ""

# Number of revisions to retain to allow rollback in the underlying StatefulSets.
# By default, if not set, Kubernetes sets 10.
#
# revisionHistoryLimit: 2

# Node configuration settings.
# The node roles which can be configured here are:
# - "master"
# - "data_hot"
# - "data_cold"
# - "data_frozen"
# - "data_content"
# - "ml"
# - "ingest"
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-node-configuration.html
#
nodeSets:
- name: default
  count: 1
  config:
    # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
    # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
    # and leave node.store.allow_mmap unset.
    # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-virtual-memory.html
    #
    node.store.allow_mmap: false
  podTemplate:
    # The following spec is exactly the Kubernetes Core V1 PodTemplateSpec. Any fields within the PodTemplateSpec
    # are supported within the 'spec' field below.  Please see below documentation for the exhaustive list of fields.
    #
    # https://v1-24.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#podtemplatespec-v1-core
    #
    # Only the commonly overridden/used fields will be noted below.
    #
    spec:

    # If specified, the pod's scheduling constraints
    # https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-advanced-node-scheduling.html
    # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: topology.kubernetes.io/zone
    #           operator: In
    #           values:
    #           - antarctica-east1
    #           - antarctica-west1

    # Containers array.  Should only be used to customize the 'elasticsearch' container using the following fields.
      containers:
      - name: elasticsearch

        # List of environment variables to set in the 'elasticsearch' container.
        # https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
        # env:
        # - name: "my-env-var"
        #   value: "my-value"

        # Compute Resources required by this container.
        resources:
          # Requests describes the minimum amount of compute resources required. If Requests is omitted for a container,
          # it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value.
          #
          # Defaults used by the ECK Operator, if not specified, are below
          limits:
            # cpu: 1
            memory: 2Gi
          requests:
            # cpu: 1
            memory: 2Gi

          # Example increasing both the requests and limits values:
          # limits:
          #   cpu: 4
          #   memory: 8Gi
          # requests:
          #   cpu: 1
          #   memory: 8Gi

        # SecurityContext defines the security options the container should be run with.
        # If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
        #
        # These typically are set automatically by the ECK Operator, and should only be adjusted
        # with the full knowledge of the effects of each field.
        #
        # securityContext:

          # Whether this container has a read-only root filesystem. Default is false.
          # readOnlyRootFilesystem: false

          # The GID to run the entrypoint of the container process. Uses runtime default if unset.
          # runAsGroup: 1000

          # Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure
          # that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed.
          # runAsNonRoot: true

          # The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified.
          # runAsUser: 1000

    # ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
    # https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
    # imagePullSecrets:
    # - name: "image-pull-secret"

    # List of initialization containers belonging to the pod.
    #
    # Common initContainers include setting sysctl, or in 7.x versions of Elasticsearch,
    # installing Elasticsearch plugins.
    #
    # https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    # initContainers:
    # - command:
    #   - sh
    #   - "-c"
    #   - sysctl -w vm.max_map_count=262144
    #   name: sysctl
    #   securityContext:
    #     privileged: true
    # - command:
    #   - sh
    #   - "-c"
    #   - bin/elasticsearch-plugin remove --purge analysis-icu ; bin/elasticsearch-plugin install --batch analysis-icu
    #   name: install-plugins
    #   securityContext:
    #     privileged: true


    # NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node.
    # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    # https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-advanced-node-scheduling.html
    # nodeSelector:
    #   diskType: ssd
    #   environment: production

    # If specified, indicates the pod's priority. "system-node-critical" and "system-cluster-critical" are two special keywords which indicate the highest priorities with the former being the highest priority.
    # Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.
    # https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
    # priorityClassName: ""

    # SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.
    # See previously defined 'securityContext' within 'podTemplate' for all available fields.
    # securityContext: {}

    # ServiceAccountName is the name of the ServiceAccount to use to run this pod.
    # https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
    # serviceAccountName: ""

    # Optional duration in seconds to wait for the Elasticsearch pod to terminate gracefully.
    # terminationGracePeriodSeconds: 30s

    # If specified, the pod's tolerations that will apply to all containers within the pod.
    # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
    # tolerations:
    # - key: "node-role.kubernetes.io/elasticsearch"
    #   effect: "NoSchedule"
    #   operator: "Exists"

    # TopologySpreadConstraints describes how a group of pods ought to spread across topology domains.
    # Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.
    #
    # These settings are generally applied within each `nodeSets[].podTemplate` field to apply to a specific Elasticsearch nodeset.
    #
    # https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-advanced-node-scheduling.html
    # topologySpreadConstraints: {}

    # List of volumes that can be mounted by containers belonging to the pod.
    # https://kubernetes.io/docs/concepts/storage/volumes
    # volumes: []

# Settings for controlling Elasticsearch ingress. Enabling ingress will expose your Elasticsearch instance
# to the public internet, and as such is disabled by default.
#
# Each Cloud Service Provider has different requirements for setting up Ingress. Some links to common documentation are:
# - AWS:   https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html
# - GCP:   https://cloud.google.com/kubernetes-engine/docs/concepts/ingress
# - Azure: https://learn.microsoft.com/en-us/azure/aks/app-routing
# - Nginx: https://kubernetes.github.io/ingress-nginx/
#
ingress:
  enabled: false

  # Annotations that will be applied to the Ingress resource. Note that some ingress controllers are controlled via annotations.
  # 
  # Nginx Annotations: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/
  #
  # Common annotations:
  #   kubernetes.io/ingress.class: gce          # Configures the Ingress resource to use the GCE ingress controller and create an external Application Load Balancer.
  #   kubernetes.io/ingress.class: gce-internal # Configures the Ingress resource to use the GCE ingress controller and create an internal Application Load Balancer.
  #   kubernetes.io/ingress.class: nginx        # Configures the Ingress resource to use the NGINX ingress controller.
  #
  annotations: {}

  # Labels that will be applied to the Ingress resource.
  #
  labels: {}

  # Some ingress controllers require the use of a specific class name to route traffic to the correct controller, notably AKS and EKS, which
  # replaces the use of the 'kubernetes.io/ingress.class' annotation.
  #
  # className: webapprouting.kubernetes.azure.com | alb

  # Ingress paths are required to have a corresponding path type. Defaults to 'Prefix'.
  #
  # There are 3 supported path types:
  # - ImplementationSpecific
  # - Prefix
  # - Exact
  #
  # ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types
  #
  pathType: Prefix

  # Hosts are a list of hosts included in the Ingress definition, with a corresponding path at which the default Elasticsearch service
  # will be exposed. Each host in the list should be a fully qualified DNS name that will resolve to the exposed Ingress object.
  #
  # ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#name-based-virtual-hosting
  #
  hosts:
    - host: chart-example.local
      path: /

  # TLS defines whether TLS will be enabled on the Ingress resource.
  #
  # *NOTE* Many Cloud Service Providers handle TLS in a custom manner, and as such, it is recommended to consult their documentation.
  # Notably GKE and Nginx Ingress Controllers seems to respect the Ingress TLS settings, AKS and EKS ignore it.
  #
  # - AKS:   https://learn.microsoft.com/en-us/azure/aks/app-routing-dns-ssl
  # - GKE:   https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#options_for_providing_ssl_certificates
  # - EKS:   https://aws.amazon.com/blogs/containers/serve-distinct-domains-with-tls-powered-by-acm-on-amazon-eks/
  # - Nginx: https://kubernetes.github.io/ingress-nginx/user-guide/tls/
  #
  # Kubernetes ingress TLS documentation:
  # ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  #
  tls:
    enabled: false
    # Optional Kubernetes secret name that contains a base64 encoded PEM certificate and private key that corresponds to the above 'hosts' definitions.
    # If tls is enabled, but this field is not set, the self-signed certificate and key created by the ECK operator will be used.
    # secretName: chart-example-tls

---
# Default values for eck-kibana.
# This is a YAML-formatted file.

# Overridable names of the Kibana resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-kibana'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
# nameOverride: "quickstart"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the Kibana resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of Kibana.
#
version: 9.0.0

# Kibana Docker image to deploy
#
# image: docker.elastic.co/kibana/kibana:9.0.0

# Labels that will be applied to Kibana.
#
labels: {}

# Annotations that will be applied to Kibana.
#
annotations: {}

# ** Deprecation Notice **
# The previous versions of this Helm Chart simply used the `spec` field here
# and allowed the user to specify any fields below spec that were templated directly
# into the final Kibana manifest. This is no long the preferred way to specify these
# fields and each field that is supported underneath `spec` is now directly specified
# in this values file. Currently both patterns are supported for backwards compatibility
# but we plan to remove the `spec` field in the future.
# spec: {}

# Count of Kibana replicas to create.
#
count: 1

# Reference to ECK-managed Elasticsearch resource.
#
elasticsearchRef: {}
  # name: eck-elasticsearch
  # Optional namespace reference to Elasticsearch resource.
  # If not specified, then the namespace of the Kibana resource
  # will be assumed.
  #
  # namespace: default

# Reference to an EnterpriseSearch running in the same Kubernetes cluster
#
# enterpriseSearchRef:

# The Kibana configuration (kibana.yml)
# ref: https://www.elastic.co/guide/en/kibana/current/settings.html
#
config: null

# The HTTP layer configuration for Kibana.
#
# http:

# PodTemplate provides customisation options (labels, annotations, affinity rules,
# resource requests, and so on) for the Kibana pods
#
# podTemplate:

# Number of revisions to retain to allow rollback in the underlying deployment.
# By default, if not set, Kubernetes sets 10.
#
# revisionHistoryLimit: 2

# Control Kibana Secure Settings.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-kibana-secure-settings.html
#
secureSettings: []

# Used to check access from the current resource to a resource (for ex. Elasticsearch) in a different namespace.
# Can only be used if ECK is enforcing RBAC on references.
#
# serviceAccountName: ""

# Settings for configuring stack monitoring.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-stack-monitoring.html
#
monitoring: {}
  # metrics:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability
  # logs:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability

# Settings for controlling Kibana ingress. Enabling ingress will expose your Kibana instance
# to the public internet, and as such is disabled by default.
#
# *NOTE* when configuring Kibana Ingress, ensure that `config.server.publicBaseUrl` setting for
# Kibana is also set, as it is required when exposing Kibana behind a load balancer/ingress.
# Also of note are `server.basePath`, and `server.rewriteBasePath` settings in the Kibana configuration.
#
# ref: https://www.elastic.co/guide/en/kibana/current/settings.html
#
# Each Cloud Service Provider has different requirements for setting up Ingress. Some links to common documentation are:
# - AWS: https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html
# - GCP: https://cloud.google.com/kubernetes-engine/docs/concepts/ingress
# - Azure: https://learn.microsoft.com/en-us/azure/aks/app-routing
# - Nginx: https://kubernetes.github.io/ingress-nginx/
#
ingress:
  enabled: false

  # Annotations that will be applied to the Ingress resource. Note that some ingress controllers are controlled via annotations.
  #
  # Nginx Annotations: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/
  #
  # Common annotations:
  #   kubernetes.io/ingress.class: gce          # Configures the Ingress resource to use the GCE ingress controller and create an external Application Load Balancer.
  #   kubernetes.io/ingress.class: gce-internal # Configures the Ingress resource to use the GCE ingress controller and create an internal Application Load Balancer.
  #   kubernetes.io/ingress.class: nginx        # Configures the Ingress resource to use the NGINX ingress controller.
  #
  annotations: {}

  # Labels that will be applied to the Ingress resource.
  #
  labels: {}

  # Some ingress controllers require the use of a specific class name to route traffic to the correct controller, notably AKS and EKS, which
  # replaces the use of the 'kubernetes.io/ingress.class' annotation.
  #
  # className: webapprouting.kubernetes.azure.com | alb

  # Ingress paths are required to have a corresponding path type. Defaults to 'Prefix'.
  #
  # There are 3 supported path types:
  # - ImplementationSpecific
  # - Prefix
  # - Exact
  #
  # ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types
  #
  pathType: Prefix

  # Hosts are a list of hosts included in the Ingress definition, with a corresponding path at which the Kibana service
  # will be exposed. Each host in the list should be a fully qualified DNS name that will resolve to the exposed Ingress object.
  #
  # ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#name-based-virtual-hosting
  #
  hosts:
    - host: chart-example.local
      path: /

  # TLS defines whether TLS will be enabled on the Ingress resource.
  #
  # *NOTE* Many Cloud Service Providers handle TLS in a custom manner, and as such, it is recommended to consult their documentation.
  # Notably GKE and Nginx Ingress Controllers seems to respect the Ingress TLS settings, AKS and EKS ignore it.
  #
  # - AKS:   https://learn.microsoft.com/en-us/azure/aks/app-routing-dns-ssl
  # - GKE:   https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#options_for_providing_ssl_certificates
  # - EKS:   https://aws.amazon.com/blogs/containers/serve-distinct-domains-with-tls-powered-by-acm-on-amazon-eks/
  # - Nginx: https://kubernetes.github.io/ingress-nginx/user-guide/tls/
  #
  # Kubernetes ingress TLS documentation:
  # ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  #
  tls:
    enabled: false
    # Optional Kubernetes secret name that contains a base64 encoded PEM certificate and private key that corresponds to the above 'hosts' definitions.
    # If tls is enabled, but this field is not set, the self-signed certificate and key created by the ECK operator will be used.
    # secretName: chart-example-tls

---
# Default values for eck-agent.
# This is a YAML-formatted file.

# Overridable names of the Elastic Agent resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-agent'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
# nameOverride: "quickstart"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the Fleet Agent resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of Elastic Agent.
#
version: 9.0.0

# Labels that will be applied to Elastic Agent.
#
labels: {}

# Annotations that will be applied to Elastic Agent.
#
annotations: {}

# Elastic Agent image to deploy.
#
# image: docker.elastic.co/beats/elastic-agent:9.0.0

# ** Deprecation Notice **
# The previous versions of this Helm Chart simply used the `spec` field here
# and allowed the user to specify any fields below `spec` that were templated directly
# into the final Kibana manifest. This is no longer the preferred way to specify these
# fields and each field that is supported underneath `spec` is now directly specified
# in this values file. Currently both patterns are supported for backwards compatibility
# but we plan to remove the `spec` field in the future.
# spec: {}

# Referenced resources are below and depending on the setup, at least one is required for a functional Agent.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-setting-referenced-resources
#
# Reference to ECK-managed Kibana instance.
#
# kibanaRef:
#   name: quickstart
  # Optional namespace reference to Kibana instance.
  # If not specified, then the namespace of the Agent instance
  # will be assumed.
  #
  # namespace: default

# Reference to ECK-managed Elasticsearch instance.
#
elasticsearchRefs:
- name: eck-elasticsearch
  # Optional namespace reference to Elasticsearch instance.
  # If not specified, then the namespace of the Agent instance
  # will be assumed.
  #
  # namespace: default

# Reference to ECK-managed Fleet Server instance.
#
# fleetServerRef:
#   name: eck-fleet-server
  # Optional namespace reference to Fleet Server instance.
  # If not specified, then the namespace of the Agent instance
  # will be assumed.
  #
  # namespace: default

# The Elastic Agent configuration, the ECK equivalent to agent.yml
# NOTE: The `config` and `configRef` fields are mutually exclusive. Only one of them should be defined at a time,
# as using both may cause conflicts.
#
# Configuration of Agent, specifically used in Agent standalone mode.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-configuration.html
#
config: null

# Reference a configuration in a Secret.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-configuration.html
#
# configRef:
#   secretName: ""

# The mode of Agent to use. Only set to "fleet" when Fleet Server is enabled.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-fleet-mode-and-fleet-server
#
# mode: "fleet"

# fleetServerEnabled determines whether the Agent will be run as the Fleet Server.
#
# NOTE: Both `mode: fleet` and `fleetServerEnabled: true` need to be set for Fleet Server to be enabled.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-fleet-mode-and-fleet-server
#
fleetServerEnabled: false

# The HTTP layer configuration for the Fleet Server Service.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-customize-fleet-server-service
#
# http:

# policyID determines into which Agent Policy this Agent will be enrolled.
# policyID: eck-agent
  
# DaemonSet, StatefulSet, or Deployment specification for Agent.
# At least one is required of [daemonSet, deployment, statefulSet].
# No default is currently set, refer to https://github.com/elastic/cloud-on-k8s/issues/7429.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-chose-the-deployment-model
#
# deployment:
#   podTemplate:
#     spec:
#       containers:
#       - name: agent
#         securityContext:
#           runAsUser: 0
# daemonSet:
#   podTemplate:
#     spec:
#       containers:
#       - name: agent
#         securityContext:
#           runAsUser: 0
# statefulSet:
#   podTemplate:
#     spec:
#       containers:
#       - name: agent
#         securityContext:
#           runAsUser: 0

# SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for Elastic Agent.
secureSettings: []
# - secretName: my-secret-with-secure-settings

# Number of revisions to retain to allow rollback in the underlying Deployment.
# If not set Kubernetes sets this to 10 by default.
#
# revisionHistoryLimit: 2

# ServiceAccount to be used by Elastic Agent. Some Elastic Agent features, such as the Kubernetes integration,
# require that Agent Pods interact with Kubernetes APIs. This functionality requires specific permissions
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-role-based-access-control
#
serviceAccount:
  name: elastic-agent
  # { .Release.Namespace } is used here by default, but can be specified.
  # namespace: optional-namespace

# ClusterRoleBinding to be used by Elastic Agent. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-role-based-access-control
#
clusterRoleBinding:
  name: elastic-agent
  subjects:
  - kind: ServiceAccount
    name: elastic-agent
    # { .Release.Namespace } is used here by default, but can be specified.
    # namespace: default
  roleRef:
    kind: ClusterRole
    name: elastic-agent
    apiGroup: rbac.authorization.k8s.io

# ClusterRole to be used by Elastic Agent. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-role-based-access-control
#
clusterRole:
  name: elastic-agent
  rules:
  - apiGroups: [""]
    resources:
    - pods
    - nodes
    - namespaces
    - events
    - services
    - configmaps
    verbs:
    - get
    - watch
    - list
  - apiGroups: ["coordination.k8s.io"]
    resources:
    - leases
    verbs:
    - get
    - create
    - update
  - nonResourceURLs:
    - "/metrics"
    verbs:
    - get
  - apiGroups: ["extensions"]
    resources:
      - replicasets
    verbs: 
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - "apps"
    resources:
    - statefulsets
    - deployments
    - replicasets
    - daemonsets
    verbs:
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - get
  - nonResourceURLs:
    - "/metrics"
    verbs:
    - get
  - apiGroups:
    - "batch"
    resources:
    - jobs
    - cronjobs
    verbs:
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - "storage.k8s.io"
    resources:
    - storageclasses
    verbs:
    - "get"
    - "list"
    - "watch"

---
# Default values for eck-beats.
# This is a YAML-formatted file.

# Overridable names of the Beats resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-beats'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
# nameOverride: "quickstart"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the Beats resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of Elastic Beats.
#
version: 9.0.0

# Labels that will be applied to Elastic Beats.
#
labels: {}

# Annotations that will be applied to Elastic Beats.
#
annotations: {}

# ** Deprecation Notice **
# The previous versions of this Helm Chart simply used the `spec` field here
# and allowed the user to specify any fields below spec that were templated directly
# into the final Beats manifest. This is no longer the preferred way to specify these
# fields and each field that is supported underneath `spec` is now directly specified
# in this values file. Currently both patterns are supported for backwards compatibility
# but we plan to remove the `spec` field in the future.
# spec: {}

# Type of Elastic Beats. Standard types of Beat are [filebeat,metricbeat,heartbeat,auditbeat,packetbeat,journalbeat].
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-deploy-elastic-beat
#
# Note: This is required to be set, or the release install will fail.
#
type: ""

# Beats image to deploy.
#
# image: docker.elastic.co/beats/metricbeat:9.0.0

# Referenced resources are below and depending on the setup, at least elasticsearchRef is required for a functional Beat.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-connect-es
#
# Reference to ECK-managed Kibana instance.
#
# kibanaRef:
#   name: quickstart
  # Optional namespace reference to Kibana instance.
  # If not specified, then the namespace of the Beats instance
  # will be assumed.
  #
  # namespace: default

# Reference to ECK-managed Elasticsearch instance.
# *Note* If Beat's output is intended to go to Elasticsearch and not something like Logstash,
# this elasticsearchRef must be updated to the name of the Elasticsearch instance.
#
elasticsearchRef: {}
  # name: elasticsearch
  # Optional namespace reference to Elasticsearch instance.
  # If not specified, then the namespace of the Beats instance
  # will be assumed.
  #
  # namespace: default

# Daemonset, or Deployment specification for the type of Beat specified.
# At least one is required of [daemonSet, deployment].
# No default is currently set, refer to https://github.com/elastic/cloud-on-k8s/issues/7429.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-chose-the-deployment-model
#
# deployment:
#   podTemplate:
#     spec:
#       securityContext:
#         runAsUser: 0
# daemonSet:
#   podTemplate:
#     spec:
#       securityContext:
#         runAsUser: 0

# Configuration of Beat, which is dependent on the `type` of Beat specified.
# NOTE: The `config` and `configRef` fields are mutually exclusive. Only one of them should be defined at a time,
# as using both may cause conflicts.
#
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-custom-configuration
#
config: {}

# Reference a configuration in a Secret.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-custom-configuration
#
# configRef:
#   secretName: ""

# The HTTP layer configuration for the Beats Service.
#
# http:

# Settings for configuring stack monitoring.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-stack-monitoring.html
#
# monitoring: {}
  # metrics:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability
  # logs:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability

# SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for Elastic Beats.
secureSettings: []
# - secretName: my-secret-with-secure-settings

# Number of revisions to retain to allow rollback in the underlying Deployment.
# If not set Kubernetes sets this to 10 by default.
#
# revisionHistoryLimit: 2

# ServiceAccount to be used by Elastic Beats. Some Beats features (such as autodiscover or Kubernetes module metricsets)
# require that Beat Pods interact with Kubernetes APIs. This functionality requires specific permissions
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-role-based-access-control-for-beats
#
serviceAccount: {}
#  name: elastic-beat-filebeat-quickstart
#  namespace: optional-namespace

# ClusterRoleBinding to be used by Elastic Beats. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-role-based-access-control-for-beats
#
clusterRoleBinding: {}
#  name: elastic-beat-autodiscover-binding
#  subjects:
#  - kind: ServiceAccount
#    name: elastic-beat-filebeat-quickstart
#    namespace: default
#  roleRef:
#    kind: ClusterRole
#    name: elastic-beat-autodiscover
#    apiGroup: rbac.authorization.k8s.io

# ClusterRole to be used by Elastic Beats. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-role-based-access-control-for-beats
#
clusterRole: {}
#  name: elastic-beat-autodiscover
#  rules:
#  - apiGroups: [""]
#    resources:
#    - events
#    - pods
#    - namespaces
#    - nodes
#    verbs:
#    - get
#    - watch
#    - list

---
# Default values for eck-apm-server.
# This is a YAML-formatted file.

# Overridable names of the APM Server resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-apm-server'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
# nameOverride: "quickstart"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the APM Server resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of APM Server.
#
version: 9.0.0

# APM Server Docker image to deploy
#
# image:

# Used to check access from the current resource to a resource (for ex. a remote Elasticsearch cluster) in a different namespace.
# Can only be used if ECK is enforcing RBAC on references.
#
# serviceAccountName: ""

# Labels that will be applied to APM Server.
#
labels: {}

# Annotations that will be applied to APM Server.
#
annotations: {}

# Count of APM Server replicas to create.
#
count: 1

# The APM Server configuration, the ECK equivalent to apm-server.yml
# ref: https://www.elastic.co/guide/en/apm/server/current/configuring-howto-apm-server.html
#
config: {}

# Settings to control how APM Server will be accessed.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-accessing-elastic-services.html
#
http: {}
  # service:
  #   metadata:
  #     labels:
  #       my-custom: label
  #   spec:
  #     ports:
  #     - name: http
  #       port: 8200
  #       targetPort: 8200

# Reference to ECK-managed Elasticsearch resource.
#
elasticsearchRef: {}
  # name: eck-elasticsearch
  # Optional namespace reference to Elasticsearch resource.
  # If not specified, then the namespace of the APM Server resource
  # will be assumed.
  #
  # namespace: default

# Optional reference to ECK-managed Kibana resource which allows ECK to
# automatically configure the Kibana endpoint as described in 
# https://www.elastic.co/guide/en/apm/server/current/setup-kibana-endpoint.html
#
# kibanaRef:
#   name: eck-kibana
#   # Optional namespace reference to Kibana resource.
#   # If not specified, then the namespace of the APM Server resource
#   # will be assumed.
#   #
#   # namespace: default

# Set podTemplate to customize the pod used by APM Server
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-customize-pods.html
#
podTemplate: {}

# Number of revisions to retain to allow rollback in the underlying Deployment.
# If not set Kubernetes sets this to 10 by default.
#
# revisionHistoryLimit: 2

# SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for APM Server.
secureSettings: []
# - secretName: my-secret-with-secure-settings

---
# Default values for eck-fleet-server.
# This is a YAML-formatted file.

# Overridable names of the Fleet Server resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-fleet-server'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
# nameOverride: "quickstart"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the Fleet Server resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of Elastic Fleet Server.
#
version: 9.0.0

# Labels that will be applied to Elastic Fleet Server.
#
labels: {}

# Annotations that will be applied to Elastic Fleet Server.
#
annotations: {}

# Elastic Fleet Server Agent image to deploy.
#
# image: docker.elastic.co/beats/elastic-agent:9.0.0

# ** Deprecation Notice **
# The previous versions of this Helm Chart simply used the `spec` field here
# and allowed the user to specify any fields below `spec` that were templated directly
# into the final Agent/Fleet Server manifest. This is no longer the preferred way to specify these
# fields and each field that is supported underneath `spec` is now directly specified
# in this values file. Currently both patterns are supported for backwards compatibility
# but we plan to remove the `spec` field in the future.
# spec: {}

# Referenced resources are below and both elasticsearchRefs and kibanaRef are required for a functional Fleet Server.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-setting-referenced-resources
#
# Reference to ECK-managed Kibana instance.
# This is required for Fleet Server.
#
# kibanaRef:
#   name: quickstart
  # Optional namespace reference to Kibana instance.
  # If not specified, then the namespace of the Fleet Server resource
  # will be assumed.
  #
  # namespace: default

# Reference to ECK-managed Elasticsearch instance.
# This is required for Fleet Server.
#
elasticsearchRefs: []
# - name: eck-elasticsearch
  # Optional namespace reference to Elasticsearch instance.
  # If not specified, then the namespace of the Fleet Server resource
  # will be assumed.
  #
  # namespace: default

# policyID determines into which Agent Policy this Fleet Server will be enrolled.
policyID: eck-fleet-server

# The HTTP layer configuration for the Fleet Server Service.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-customize-fleet-server-service
#
# http:

# Deployment or StatefulSet specification for Fleet Server.
# At least one is required of [deployment, statefulSet].
# No default is currently set, refer to https://github.com/elastic/cloud-on-k8s/issues/7429.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-chose-the-deployment-model
#
# deployment:
#   replicas: 1
#   podTemplate:
#     spec:
#       serviceAccountName: fleet-server
#       automountServiceAccountToken: true
#
# statefulSet:
#   podTemplate:
#     spec:
#       serviceAccountName: fleet-server
#       automountServiceAccountToken: true

# Number of revisions to retain to allow rollback in the underlying Deployment.
# If not set Kubernetes sets this to 10 by default.
#
# revisionHistoryLimit: 2

# ServiceAccount to be used by Elastic Fleet Server. Some Fleet Server features (such as autodiscover or Kubernetes module metricsets)
# require that Fleet Server Pods interact with Kubernetes APIs. This functionality requires specific permissions
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-role-based-access-control
#
serviceAccount:
  name: fleet-server
  # namespace: optional-namespace

# ClusterRoleBinding to be used by Elastic Fleet Server. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-role-based-access-control
#
clusterRoleBinding:
  name: fleet-server
  subjects:
  - kind: ServiceAccount
    name: fleet-server
    # namespace: default
  roleRef:
    kind: ClusterRole
    name: fleet-server
    apiGroup: rbac.authorization.k8s.io

# ClusterRole to be used by Elastic Fleet Server. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-role-based-access-control
#
clusterRole:
  name: fleet-server
  rules:
  - apiGroups: [""]
    resources:
    - pods
    - namespaces
    - nodes
    verbs:
    - get
    - watch
    - list
  - apiGroups: ["apps"]
    resources:
      - replicasets
    verbs:
      - get
      - watch
      - list
  - apiGroups: ["batch"]
    resources:
      - jobs
    verbs:
      - get
      - watch
      - list
  - apiGroups: ["coordination.k8s.io"]
    resources:
    - leases
    verbs:
    - get
    - create
    - update

---
# Default values for eck-logstash.
# This is a YAML-formatted file.

# Overridable names of the Logstash resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-logstash'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
# nameOverride: "quickstart"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the Logstash resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of Logstash.
#
version: 9.0.0

# Logstash Docker image to deploy
#
# image:

# Used to check access from the current resource to a resource (for ex. a remote Elasticsearch cluster) in a different namespace.
# Can only be used if ECK is enforcing RBAC on references.
#
# serviceAccountName: ""

# Labels that will be applied to Logstash.
#
labels: {}

# Annotations that will be applied to Logstash.
#
annotations: {}

# Number of revisions to retain to allow rollback in the underlying StatefulSets.
# By default, if not set, Kubernetes sets 10.
#
# revisionHistoryLimit: 2

# Controlling the number of pods.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-scaling-logstash.html
#
count: 1

# The logstash configuration, the ECK equivalent to logstash.yml
#
# NOTE: The `config` and `configRef` fields are mutually exclusive. Only one of them should be defined at a time,
# as using both may cause conflicts.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-configuring-logstash
#
config: {}

# Reference a configuration in a Secret.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-configuring-logstash
#
# configRef:
#   secretName: ''

# Set podTemplate to customize the pod used by Logstash
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-customize-pods.html
#
podTemplate: {}

# Settings for configuring stack monitoring.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-stack-monitoring.html
#
monitoring: {}
  # metrics:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability 
  # logs:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability

# The Logstash pipelines, the ECK equivalent to pipelines.yml
#
# NOTE: The `pipelines` and `pipelinesRef` fields are mutually exclusive. Only one of them should be defined at a time,
# as using both may cause conflicts.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-pipelines
#
pipelines: []

# Reference a pipelines configuration in a Secret.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-pipelines
#
# pipelinesRef:
#   secretName: ''

# volumeClaimTemplates
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-volume-claim-settings
#
volumeClaimTemplates: []

# ElasticsearchRefs are references to Elasticsearch clusters running in the same Kubernetes cluster.
# Ensure that the 'clusterName' field matches what is referenced in the pipeline.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-logstash-configuration.html#k8s-logstash-pipelines-es
#
elasticsearchRefs: []
#  - namespace: ''
#    name: ''
#    clusterName: ''
#    serviceName: ''
#    secretName: ''

services: []

# SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Logstash
secureSettings: []

