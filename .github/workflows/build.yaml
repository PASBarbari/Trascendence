name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      specific_service:
        description: 'Specific service to build (leave empty for all)'
        required: false
        default: ''
      version:
        description: 'Version tag (default: generated from date)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Needed for detecting changes

    - name: Generate version if not provided
      id: version
      run: |
        if [ -z "${{ github.event.inputs.version }}" ]; then
          echo "version=$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        else
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # Check for changes in Chat Service
    - name: Check Chat changes
      id: chat-changes
      if: ${{ github.event.inputs.specific_service == '' || github.event.inputs.specific_service == 'chat' }}
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^Back-End/chat/"; then
          echo "changed=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    # Build Chat Service if changed
    - name: Build and push Chat Service
      if: ${{ steps.chat-changes.outputs.changed == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: ./Back-End/chat
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/chat:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/chat:${{ steps.version.outputs.version }}

    # Check for changes in Login Service
    - name: Check Login changes
      id: login-changes
      if: ${{ github.event.inputs.specific_service == '' || github.event.inputs.specific_service == 'login' }}
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^Back-End/login/"; then
          echo "changed=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    # Build Login Service if changed
    - name: Build and push Login Service
      if: ${{ steps.login-changes.outputs.changed == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: ./Back-End/login
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/login-server:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/login-server:${{ steps.version.outputs.version }}

    # Check for changes in Frontend (assuming it's at root level)
    - name: Check Frontend changes
      id: frontend-changes
      if: ${{ github.event.inputs.specific_service == '' || github.event.inputs.specific_service == 'frontend' }}
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^Frontend/"; then
          echo "changed=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    # Build Frontend if changed
    - name: Build and push Frontend
      if: ${{ steps.frontend-changes.outputs.changed == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: ./Frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:${{ steps.version.outputs.version }}

    # Check for changes in Pong Service
    - name: Check Pong changes
      id: pong-changes
      if: ${{ github.event.inputs.specific_service == '' || github.event.inputs.specific_service == 'pong' }}
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^Back-End/pongProject/"; then
          echo "changed=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    # Build Pong Service if changed
    - name: Build and push Pong Service
      if: ${{ steps.pong-changes.outputs.changed == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: ./Back-End/pongProject
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/pong-server:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/pong-server:${{ steps.version.outputs.version }}

    # Check for changes in Notifications Service
    - name: Check Notifications changes
      id: notifications-changes
      if: ${{ github.event.inputs.specific_service == '' || github.event.inputs.specific_service == 'notifications' }}
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^Back-End/Notifications/"; then
          echo "changed=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    # Build Notifications Service if changed
    - name: Build and push Notifications Service
      if: ${{ steps.notifications-changes.outputs.changed == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: ./Back-End/Notifications
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/notifications-server:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/notifications-server:${{ steps.version.outputs.version }}

    # Check for changes in Task User Service
    - name: Check Task User changes
      id: task-user-changes
      if: ${{ github.event.inputs.specific_service == '' || github.event.inputs.specific_service == 'task-user' }}
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^Back-End/task_user/"; then
          echo "changed=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    # Build Task User Service if changed
    - name: Build and push Task User Service
      if: ${{ steps.task-user-changes.outputs.changed == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: ./Back-End/task_user
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/task-user-server:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/task-user-server:${{ steps.version.outputs.version }}